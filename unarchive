#!/usr/bin/env bash
usage()
{
    echo "${0##*/} archive1 archive2 archive3 ...
    Any archive supported is extracted to current dir.

    Assuming sucessful operation, each extracted folder is echoed.
    "
}

extract_files()
{
    local tmpdir=$HOME/loopback
    for file ; do
        if [ ! -f $file ] ; then
            echo "'$file' is not a valid file!"
            continue
        fi

        case $file in
            *.deb)               ar p "$file" data.tar.gz | tar zx ;;
            *.rpm)               rpm2cpio "$file" | cpio -vid      ;;
            *.jar)               jar xf "$file"                    ;;
            *.iso)               7z x "$file"                      ;;
            *.tar)               tar xf "$file"                    ;;
            *.tbz2|*.tar.bz2)    tar xjf "$file"                   ;;
            *.tgz|*.tar.gz)      tar xzf "$file"                   ;;
            *.tar.lz|*.tar.lzma) lzcat "$file" | tar xf -          ;;
            *.tar.xz)            xzcat "$file" | tar xf -          ;;
            *.tar.Z)             zcat "$file" | tar xf -           ;;
            *.bz|*.bz2)          bunzip2 "$file"                   ;;
            *.gz)                gunzip "$file"                    ;;
            *.lzma)              unlzma "$file"                    ;;
            *.rar)               unrar "$file"                     ;;
            *.xz)                unxz "$file"                      ;;
            *.Z)                 uncompress "$file"                ;;
            *.zip)               unzip "$file"                     ;;
            *.7z)                7z x "$file"                      ;;
            *.dmg)
                mkdir -vp $tmpdir
                mount -o loop -t hfs "$file" $tmpdir
                echo "'$file' mounted at '$tmpdir'."               ;;
            *.img|*.dd)
                mkdir -vp $tmpdir
                mount -o loop -t iso9660 "$file" $tmpdir
                echo "'$file' mounted at '$tmpdir'."               ;;
            *)
                echo "${0##*/}: ERROR: Cannot extract '$file'"            ;;
        esac
        local folder=$(extract_folder "$file")
        echo -n "${folder} "
    done
    echo
}

extract_folder()
{
    local front=$(echo "$1" | sed -e 's/\([[:alnum:]]*\)[[:punct:]]*.*/\1/g')
    for file in ${front}*; do
        if [ "$file" == "$1" ]; then
            continue
        fi

        echo "$file"
        break
    done
}

if [ ! "$#" -gt 0 -o "$1" == '--help' -o "$1" == '-h' ]; then
    usage
    exit
fi

extract_files "$@"
