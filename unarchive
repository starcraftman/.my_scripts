#!/usr/bin/env bash
usage()
{
    echo "${0##*/} archive1 archive2 archive3 ...
    Extracts any archive format that is supported."
}

extract_files()
{
    local tmpdir=$HOME/loopback
    for file ; do
        if [ ! -f $file ] ; then
            echo "'$file' is not a valid file!"
            continue
        fi

        echo "Extracting ${file} ....."
        case $file in
            *.deb)               ar p "$file" data.tar.gz | tar zx ;;
            *.rpm)               rpm2cpio "$file" | cpio -vid      ;;
            *.jar)               jar xf "$file"                    ;;
            *.iso)               7z x "$file"                      ;;
            *.tar)               tar xf "$file"                   ;;
            *.tbz2|*.tar.bz2)    tar xjf "$file"                  ;;
            *.tgz|*.tar.gz)      tar xzf "$file"                  ;;
            *.tar.lz|*.tar.lzma) lzcat "$file" | tar xf -         ;;
            *.tar.xz)            xzcat "$file" | tar xf -         ;;
            *.tar.Z)             zcat "$file" | tar xf -          ;;
            *.bz|*.bz2)          bunzip2 "$file"                   ;;
            *.gz)                gunzip "$file"                    ;;
            *.lzma)              unlzma "$file"                    ;;
            *.rar)               unrar "$file"                     ;;
            *.xz)                unxz "$file"                      ;;
            *.Z)                 uncompress "$file"                ;;
            *.zip)               unzip "$file"                     ;;
            *.7z)                7z x "$file"                      ;;
            *.dmg)
                echo "'$file' mounted at '$tmpdir'."
                mkdir -p $tmpdir
                mount -o loop -t hfs "$file" $tmpdir               ;;
            *.img|*.dd)
                echo "'$file' mounted at '$tmpdir'."
                mkdir -p $tmpdir
                mount -o loop -t iso9660 "$file" $tmpdir           ;;
            *)
                echo "${0##*/}: Cannot extract '$file'"           ;;
        esac
        local folder=$(extract_extension "$file")
        echo "${file} extracted to ${folder}"
    done
}

extract_extension()
{
    local name="${1##*/}"
    if contains "$name" "tar"; then
        echo "$name" | sed -r 's/\.[[:alnum:]]+\.[[:alnum:]]+$//'
    else
        echo "$name" | sed -r 's/\.[[:alnum:]]+$//'
    fi
}

if [ ! "$#" -gt 0 ]; then
    usage
    exit
fi

extract_files "$@"
