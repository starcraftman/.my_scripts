diff --git a/SysInstall.py b/SysInstall.py
index c0942ce..2fdb17b 100755
--- a/SysInstall.py
+++ b/SysInstall.py
@@ -110,40 +110,20 @@ CABAL = "buildwrapper scion-browser hoogle terminfo happy hlint"
 
 PY_PACKS = "argcomplete cram neovim Pygments pytest trash-cli"
 
+DOT_FDIR = '.shell{0}{1}{0}'.shell' + os.path.sep + 'dot' + os.path.sep
 
 class NotSudo(Exception):
     """ Throw this if we aren't sudo but need to be. """
     pass
 
 
-def make_cmd(src, dst):
-    """ Generate a function helper. """
-    def cmd_when_dst_empty(files, command, opts=None):
-        """ When dst doesn't have file do:
-                command(src + file, dst + file, *opts)
-        """
-        if opts is None:
-            opts = ()
-        for fil in files:
-            sfile, dfile = [x + fil for x in (src, dst)]
-            if not os.path.exists(dfile):
-                print("{0} >>>>> {1}".format(sfile, dfile))
-                command(sfile, dfile, *opts)
-    return cmd_when_dst_empty
-
-
 def home_config():
     """ Setup the dev environment, stuff goes in the user's home folder. """
-    script_path = os.path.relpath(__file__)
-    script_dir = os.path.dirname(script_path)
-    if script_dir == '':
-        script_dir = '.'
-
-    dot_dir = script_dir + os.sep + 'dot_files' + os.sep
-    home = os.path.expanduser('~') + os.sep
+    olddir = os.path.abspath('.')
+    os.chdir(os.path.expanduser('~'))
 
     # Get shell utilities
-    shell_dir = home + '.shell' + os.sep
+    shell_dir = '.shell' + os.sep
     git_urls = [
         'https://github.com/magicmonty/bash-git-prompt.git',
         'https://github.com/starcraftman/zsh-git-prompt.git',
@@ -151,37 +131,45 @@ def home_config():
         'https://github.com/zsh-users/zsh-syntax-highlighting.git',
         'https://github.com/starcraftman/hhighlighter.git',
     ]
-
     for url in git_urls:
-        target = '.' + url[url.rindex('/')+1:url.rindex('.git')]
+        target = url[url.rindex('/')+1:url.rindex('.git')]
         get_code(url, shell_dir + target)
 
-    get_code('https://bitbucket.org/sjl/hg-prompt/', shell_dir + '.hg-prompt')
+    get_code('https://bitbucket.org/sjl/hg-prompt/', shell_dir + 'hg-prompt')
 
     # Setup powerline fonts if not done.
-    ddir = home + '.fonts'
+    ddir = '.fonts'
     dpow = ddir + os.sep + 'powerline-fonts'
     if not os.path.exists(ddir) and subprocess.call(['which', 'fc-cache']) == 0:
         os.mkdir(ddir)
         get_code('https://github.com/Lokaltog/powerline-fonts', dpow)
         subprocess.call(['fc-cache', '-vf', ddir])
 
-    ddir = home + '.ccache'
+    ddir = '.ccache'
     if not os.path.exists(ddir):
         os.mkdir(ddir)
 
-    files = [os.path.basename(x) for x in glob.glob(dot_dir + '.*')]
-    helper = make_cmd(dot_dir, home)
-    helper(files, os.symlink)
-
+    # Fetch dot to shell_dir & link to $HOME
+    dot_dir = shell_dir + 'dot' + os.sep
+    get_code('https://github.com/starcraftman/dot_files.git', dot_dir)
+    files = [os.path.basename(x) for x in
+            glob.glob(dot_dir + 'files' + os.sep + '*')]
+    for fil in files:
+        sfile = '{0}files{1}{2}'.format(dot_dir, os.sep, fil),
+        dfile = '.{0}'.format(fil)
+        if not os.path.exists(dfile):
+            print("{0} >>>>> {1}".format(sfile, dfile))
+            os.symlink(sfile, dfile)
+
+    os.chdir(olddir)
     print("NOTE: Remember to add user to smb.\nsudo smbpasswd -a username")
 
 
 def home_restore():
     """ Undo changes by home_config & restore backup if exists. """
+    olddir = os.path.abspath('.')
+    os.chdir(os.path.expanduser('~'))
     arc_dir = os.path.expanduser('~/.home_bak/')
-    home = os.path.expanduser('~/')
-    dot_dir = home + '.my_scripts' + os.path.sep + 'dot_files' + os.path.sep
 
     for folder in ('.shell', '.fonts', '.ccache',):
         try:
@@ -196,15 +184,18 @@ def home_restore():
             os.remove(fil)
 
     arc_files = [os.path.basename(x) for x in glob.glob(arc_dir + '.*')]
-    helper = make_cmd(arc_dir, home)
-    helper(arc_files, os.rename)
+    for fil in arc_files:
+        sfile = arc_dir + os.sep + fil
+        dfile = home + os.sep + fil
+        if not os.path.exists(dfile):
+            print("{0} >>>>> {1}".format(sfile, dfile))
+            os.rename(sfile, dfile)
 
     try:
         os.rmdir(arc_dir)
     except OSError:
         pass
 
-
 def home_save():
     """ Save existing home configs to a backup dir. """
     arc_dir = os.path.expanduser('~/.home_bak/')
@@ -217,8 +208,12 @@ def home_save():
     files = [os.path.basename(x) for x in glob.glob(dot_dir + '.*')]
     files = [x for x in files if os.path.exists(home + x)]
 
-    helper = make_cmd(home, arc_dir)
-    helper(files, os.rename)
+    for fil in files:
+        sfile = home + os.sep + fil
+        dfile = arc_dir + os.sep + fil
+        if not os.path.exists(dfile):
+            print("{0} >>>>> {1}".format(sfile, dfile))
+            os.rename(sfile, dfile)
 
 
 def packs_babun():
