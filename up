#!/usr/bin/env bash
REPOS=( ~/.shell/.[^.]* ~/.shell/..?* ~/.my_scripts )
SCRIPT_D=$(readlink -f $(dirname $0))

# Update repositories passed as arguments
update_repos() {
    echo 'updating repos'
    pushd .

    for dir ; do
        if [ -d "$dir" ]; then
            cd "$dir"
            echo -e " >>> ${T_BGREEN}$dir${T_RESET} <<< "
            if [ -d ".git" ]; then
                git pull && git submodule update --init --recursive
            elif [ -d ".hg" ]; then
                hg pull
            fi
	fi
    done

    popd
}

# Build runs in background to separate dir then
# links over OPTDIR
build_src() {
    # Determine what args to pass
    local avail_opts=( $(BuildSrc.py --help | \grep Build | cut -d ' ' -f 5 | tr '\n' ' ') )
    local opts=

    if [ -e ${OPTDIR}/bin/ag ]; then
        opts="$opts dev"
    fi

    for opt in "${avail_opts[@]}"; do
        if [ -e "$OPTDIR/bin/$opt" ]; then
            opts="$opts $opt"
        fi
    done

    # Link to OPT_ALT until update done
    local opt_orig=~/.opt1
    local opt_alt=~/.opt2
    rm "$OPTDIR"
    mv "$opt_orig" "$opt_alt"
    ln -s "$opt_alt" "$OPTDIR"

    BuildSrc.py --odir "$opt_orig" $opts >/dev/null 2>&1

    rm "$OPTDIR"
    ln -s "$opt_orig" "$OPTDIR"
    rm -rf $opt_alt
}

update_repos "${REPOS[@]}"

if [ -f ~/.vim/autoload/plug.vim ]; then
    echo 'Updating vim plugins.'
    vim +PlugUpdate +qa
    "$SCRIPT_D/archive/vim_colors.sh" >/dev/null 2>&1 &
fi

if valid_name apt-get; then
    echo 'updating debian platform'
    sudo apt-get update && sudo apt-get -y dist-upgrade
    sudo apt-get autoremove
    sudo apt-get -f install
fi

if [ -d "$OPTDIR" ]; then
    echo 'Updating programs built from source, running in bg...'
    build_src &
fi

echo 'done'
