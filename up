#!/usr/bin/env bash
OPT_ORIG=~/.opt1
OPT_ALT=~/.opt2
REPOS=( ~/.shell/.[^.]* ~/.shell/..?* ~/.my_scripts )
SCRIPT_D=$(dirname $0)
SYS=generic
if hash apt-get 2>/dev/null; then
    SYS=debian
fi

# Update repositories passed as arguments
update_repos() {
    echo 'updating repos'
    pushd .

    for dir ; do
        if [ -d "$dir" ]; then
            cd "$dir"
            echo -e " >>> ${T_BGREEN}$dir${T_RESET} <<< "
            if [ -d ".git" ]; then
                git pull
            elif [ -d ".hg" ]; then
                hg pull
            fi
	fi
    done

    popd
}

# Build runs in background to separate dir then
# links over OPTDIR
build_src() {
    local vim=
    if [ -f "$OPTDIR/bin/vim" ]; then
	vim="vim"
    fi

    mv "$OPT_ORIG" "$OPT_ALT"
    ln -fs "$OPT_ALT" "$OPTDIR"
    OPT_DIR="$OPT_ORIG" bash -c "SysInstall.py src $vim >/dev/null 2>&1 && \
        ln -fs "$OPT_ORIG" "$OPTDIR" && \rm -rf $OPT_ALT" &

}

if [ "xdebian" == "x$SYS" ]; then
    echo 'updating debian platform'
    sudo apt-get update && sudo apt-get -y dist-upgrade
    sudo apt-get autoremove
    sudo apt-get -f install
fi

if [ -d ~/.vim/bundle/Vundle.vim ]; then
    echo 'Updating vim plugins.'
    vim +PluginUpdate +qa
    "$SCRIPT_D/archive/vim_colors.sh" >/dev/null 2>&1 &
    YcmCompile.py >/dev/null 2>&1 &
fi

update_repos "${REPOS[@]}"

if [ "xdebian" == "x$SYS" ] && [ -d "$OPTDIR" ]; then
    echo 'Updating programs built from source, running in bg...'
    build_src
fi

echo 'done'
