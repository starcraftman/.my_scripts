#!/usr/bin/env bash

# Update repositories passed as arguments
update_repos() {
    echo 'updating repos'
    pushd .

    for dir ; do
        if [ -d "$dir" ]; then
            cd "$dir"
            echo -e " >>> ${T_BGREEN}$dir${T_RESET} <<< "
            if [ -d ".git" ]; then
                git pull && git submodule update --init --recursive
            elif [ -d ".hg" ]; then
                hg pull && hg update
            fi
        fi
    done

    popd
}

# Use parallel when installed. Works for git and hg only. Output will be mixed up.
if valid_name parallel && valid_name readlink; then
    readlink -f ~/.shell/* | parallel -j+0 "pushd {} &&  if [ -d '.git' ]; then git pull; elif [ -d '.hg' ]; then hg pull;  fi"
else
    __repos=( $SHELLD/* )
    update_repos "${__repos[@]}"
    unset __repos
fi

if [ -s ~/.vim/autoload/plug.vim ] && valid_name vim; then
    echo 'Updating vim plugins.'
    vim +PlugUpdate +PlugUpgrade +qa
fi

if [ -s ~/.config/nvim/autoload/plug.vim ] && valid_name nvim; then
    echo 'Updating neovim plugins.'
    nvim +PlugUpdate +PlugUpgrade +qa
fi

if valid_name apt-get; then
    echo 'updating debian platform'
    sudo apt-get update
    sudo apt-get -y dist-upgrade
    sudo apt-get autoremove
fi

if [ -d "$OPTDIR" ]; then
    echo 'Updating programs built with pakit.'
    pakit --conf "$(dirname "$(which up)")/.pakit.yml" update
fi

echo 'done'
